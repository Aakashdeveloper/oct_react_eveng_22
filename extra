https://code.visualstudio.com/  > Install (Write the Code)
https://nodejs.org/en/ > Install (Complie the code)
https://github.com/ > Signup (Access the code)
https://github.com/Aakashdeveloper > Follow
https://git-scm.com/downloads > Install (To interact with github website)

///extensions
> VsCode-icons
> spell check
> Tabnine
> git lens
> git history


40-50h
HTML
CSS
BOOTStarp 3,4,5
Basic Javascript Required for React

Npm
React = 3
Mock API
json-server >>> npx json-server --watch order.json --port 7600
React_hooks -1
React-JWT(Login Logout)-2
Deployment
-> Netlify
-> MERN
-> heroku(heroku.com)
-> ReactPy
-> Aws
-> Nginx
-> Jenkins
-> Docker
HOC (https://www.codingame.com/playgrounds/8595/reactjs-higher-order-components-tutorial)
React-GraphQL - 1 
Basic React Native- 1 (https://reactnative.dev/docs/image) 
ReactMaps
React-Redux - 1
React-Redux - 1
React-PWA - 1
Testing Jest Enzime
///////Walkthrough///////
React-Saga -1
React-with-typescript-1

Github

--------NOT Backend--------------
API
GraphQL
Login/Logout
If else , loop , function, array, variable


React-JWT(Login Logout)-1
HOC
Routing6
Github
Deployment
-> MERN
-> heroku
-> Netlify
-> ReactPy
-> Aws
-> Docker
-> Nginx
-> Jenkins
React-GraphQL - 1 
Basic React Native- 1
Testing

>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<
React
> React is frontend lib/framework which
help to build single page application using component
base structure

> Open Source
> Base on Javascript


HTML> is the main tag hyper text markup language
Head> All the script,css,meta tags and title
body> All the content that is visible to the user
div > divsion tag


/////
BlockLevel
> Always start from new line
> It will take whole width of the screen
Inline
> Start in the same line
> Only take the space that is required for content

src> source
alt > alternate
href > hyper refernce
rel > related To/ releationship

Name
Your Image
About Your
Skills
Hobbies
Map
Contact Us
footer

/////CSS//////
inline
styletag
stylesheet

inline>styletag>stylesheet

inline
{
    color:red;
    font-size:30px
}

styletag
{
    color:orange;
    border:2px solid red;
    background:gray
}

stylesheet
{
   background:white;
   font-size:40px;
   width:30px 
}

{
    color:red;
    font-size:30px;
    border:2px solid red;
    background:gray;
    width:30px 
}


///////Target Element//////////
Id 
> if we want to target something unique
> #
className 
> When we want to target multiple elements with same property
> .
TagName

solid
dotted
double
dashed
groove

position:absolute
position:relative


ReactJS @ 9:00 PM (IST) by Mr. Aakash
Day-1 https://youtu.be/Fr1aVxmrsxE
Day-2 https://youtu.be/N8ZCjNLt9og
Day-3 https://youtu.be/6oulb_Dt1Jo
Day-4 https://youtu.be/nsF3lja0Bmk


And send to whats app number  Admin Akhil : 91541 56192


window.innerHeight
377
window.innerWidth
1417
window.innerWidth
928
window.innerWidth
599


//////////Bs3//////
xs < 768px
sm > 768px;
md > 992px
lg > 1200px

//////////Bs4//////
col- < 576px;
sm > 576px
md > 768px
lg > 992px
xl > 1200px

//////////Bs5//////
col- < 576px;
sm > 576px
md > 768px
lg > 992px
xl > 1200px
xxl > 1400px

//////Npm//////
> Node Package Manager


/////JSON///////
> Javascript Object Notation
(Way to represent the data)
[
    {
        "name":"Amit",
        "city":"Delhi" 
    },
    {
        "name":"Nikita",
        "city":"Paris" 
    }
]

///////////Package.json////////
> Entry point to app
> Meta data(name,version,description)
> Packages
> Command (start,build,test)

///Step to generate Package.json
**NodeJs Must be installed in laptop
> open the cmd and navigate to the folder
> npm init 
> Answer all question
> Type "yes"


///Step to install the package
**NodeJs Must be installed in laptop
> open the cmd and navigate to the folder
> npm i packagename

///////////Setup React App//
**NodeJs Must be installed in laptop
> open the cmd and navigate to the folder
> npx create-react-app appname

///////////Setup to Run React App//
> open the cmd and navigate to the folder
> npm start
                                                                              

> react > this is the main libraray
> react-dom > this will help to display content on the screen
> react-script > this will help to run the app



function add(a,b){
    var out = [a,b]
    return out
}

add(1,2)
[1,2]


///Component
Functional
> Dumb Component
> Use for the Display purpose
> We cannot maintain state


Class component
> Logical Component
> Api Calling, Logics
> We can maintain state


hooks component


/////JavaScript//////
function add(a,b){
    return a+b
}
add(1,2)
3

////////////////////////////////
const add = (a,b) => {return a+b}
add(1,2)
3

////////
State
> Act like a local variable
> Each component can have its own state
> We can update the value of state
> Any data interaction will happen through the state

Props
> Use to transfer the data between 2 nested components
> we cannot update the value of props


/////
var a = [5,8,34,23,89,16,24,65,1,10]
for(i=0;i<a.length;i++){
    console.log(a[i])
}

var a = [5,8,34,23,89,16,24,65,1,10]
a.map((data) => {return data*2})
[10, 16, 68, 46, 178, 32, 48, 130, 2, 20]

var a = [5,8,34,23,89,16,24,65,1,10]
a.filter((data) => {return data>50})
[89, 65]

var city = ["Delhi","Mumbai","Pune","Amsterdam","Helsinki"]

city.indexOf('Delhi')
0
city.indexOf('Amsterdam')
3
city.indexOf('Venice')
-1
city.indexOf('Nice')
-1


parent > child (props)
child > parent (props with callback function) 

npm i react-router-dom@5.3.0

Params
> what we pass after /
> need to declare before use
> mainly use to pass 1 or 2 values

QueryParams
> what we pass after ?
> no need to declare before use
> We can pass multiple values



default props
> History > use for redirection
> Location > use for query params
> Match > use for params


var a = "?page=3"
undefined
a.split('=')
(2) ['?page', '3']
var a = "?page=3&code=10"
undefined
a.split('&')
(2) ['?page=3', 'code=10']
var out = a.split('&')
undefined
out[0].split('=')
(2) ['?page', '3']


//flipkart
Page1
# Top strip > https://devflipapi.herokuapp.com/topstrip
# Cloths >  https://devflipapi.herokuapp.com/item/cloths?limit=5
# Mobiles > https://devflipapi.herokuapp.com/item/mobile?limit=5
# Watches > https://devflipapi.herokuapp.com/item/watches?limit=5
# Formals > https://devflipapi.herokuapp.com/item/formals?limit=5

Page 2(Listing)
# List of item on basis of category
# Cloths > https://devflipapi.herokuapp.com/item/cloths
# Mobiles > https://devflipapi.herokuapp.com/item/mobile
# Filter on Basis of Cost
> https://devflipapi.herokuapp.com/filter/price/bags?lcost=50&hcost=500
# Filter on Basis of StarRating
> https://devflipapi.herokuapp.com/filter/rating/cloths/4

Page3 (Details)
> https://devflipapi.herokuapp.com/item/cloths?itemId=12

//zomato
(get) cityname >           https://zomatoajulypi.herokuapp.com/location
(get) restwrtcity >        https://zomatoajulypi.herokuapp.com/restaurant?stateId=1
(get) quickSearch>         https://zomatoajulypi.herokuapp.com/quicksearch

(get) onbasisofMeal >      https://zomatoajulypi.herokuapp.com/restaurant?mealtype_id=
(get) cuisinefilter >      https://zomatoajulypi.herokuapp.com/filter/4?cuisine=1
(get) costfilter >         https://zomatoajulypi.herokuapp.com/filter/1?hcost=1000&lcost=500

(get) restdetails >        http://zomatoajulypi.herokuapp.com/details/1
(get) menu >               https://zomatoajulypi.herokuapp.com/menu/1

(post) orderspage >        http://zomatoajulypi.herokuapp.com/menuItem
                           body [1,4,5]
(post)placeOrder >        

(get) allorder>            
       
(get) restaurants>         https://zomatoajulypi.herokuapp.com/restaurants
https://developerpayment.herokuapp.com/paynow


8:00 am Nodejs
HTTPS://zoom.us/j/82252979596



var a = [56,34,12,34,5]
undefined
a.splice(2,1)
[12]
a
(4) [56, 34, 34, 5]
a.splice(1,1)
[34]
a
(3) [56, 34, 5]
a.splice(0,1)
[56]

var a = [56,34,12,34,5]
undefined
a.splice(a.indexOf(12),1)
[12]
a.splice(a.indexOf(34),1)
[34]
a
(3) [56, 34, 5]
a.splice(a.indexOf(34),1)
[34]
a
(2) [56, 5]
a.splice(a.indexOf(34),1)
[5]

/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://developerjwt.onrender.com/api/auth/users
https://zomatoapi.onrender.com
https://paymentgatway.onrender.com


/// react native
> npx create-react-native-app appname